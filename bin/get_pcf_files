#!/usr/bin/perl
#
#  Script to extract the files belonging to a PCF.  Processes the PCF file
#  to identify the scripts and options, the process each script to identify
#  the panels it uses
#
#  Prints the list of files to stdout for use as input to, eg, tar
#
#  Should be run in the GPSUSER directory.  
#
#  Input is the name of the PCF file
#

use strict;
use Archive::Zip qw/ :ERROR_CODES /;
use LINZ::BERN::PcfFile;
use Getopt::Std;

my $syntax=<<EOD;

Synopsis: get_pcf_files PCF_file
          get_pcf_files -z zipfile PCF_file

Prints a list of files used by a Bernese PCF, or compiles them into
a zip file.

Must be run in the GPSUSER directory.  

EOD

my %opts;
getopts("hz:",\%opts);

die $syntax if $opts{h};
my $zipfile=$opts{z};

scalar(@ARGV)==1 || die $syntax;

my $pcf=$ARGV[0];
$pcf .= '.PCF' if $pcf !~ /\.PCF$/i;
$pcf = "PCF/$pcf";

-d 'PCF' || die "PCF directory not found, are you in a GPSUSER directory?\n";
-d 'SCRIPT' || die "SCRIPT directory not found, are you in a GPSUSER directory?\n";
-d 'OPT' || die "OPT directory not found, are you in a GPSUSER directory?\n";
-e $pcf || die "Cannot open PCF file $pcf\n";


# Process the PCF file to find the list of scripts and options it uses...

$ENV{U}='.';
my $pcff=LINZ::BERN::PcfFile->open($pcf);

my @files=($pcf);
my %scripts=();
my %optdirs=();
my %pan=();

foreach my $pid ($pcff->pids())
{
    $scripts{'SCRIPT/'.$pid->{script}}=1;
    my $optdir=$pid->{optdir};
    $optdirs{$optdir}=1;
    foreach my $p (@{$pid->{programs}})
    {
        $pan{"OPT/$optdir/$p.INP"}=1;
    }
}

# Add menu panels

foreach my $optdir (keys %optdirs)
{
    foreach my $f (glob "OPT/$optdir/MENU*.INP")
    {
        $pan{$f}=1;
    }
}

push(@files,sort keys %scripts);
push(@files,sort keys %pan);

# If we've got to here then all looks OK and we should have the complete set of files...

if( ! $zipfile )
{
    foreach my $f (@files )
    {
        print "$f\n";
    }

}

else
{
    my $zip=Archive::Zip->new();
    foreach my $f (@files)
    {
        $zip->addFile($f);
    }
    if( $zip->writeToFileNamed($zipfile) != AZ_OK )
    {
        die "Cannot create ZIP file $zipfile\n";
    }
}
